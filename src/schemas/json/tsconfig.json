{
  "title": "JSON schema for the TypeScript compiler's configuration file",
  "$schema": "http://json-schema.org/draft-04/schema#",

  "type": "object",

  "properties": {
    "compilerOptions": {
      "type": "object",
      "description": "Instructs the TypeScript compiler how to compile .ts files",
      "properties": {
        "charset": {
          "type": "string"
        },
        "codepage": {
          "type": "number",
        },
        "declaration": {
          "description": "Generates corresponding d.ts files.",
          "type": "boolean"
        },
        "diagnostics": {
          "type": "boolean"
        },
        "emitBOM": {
          "type": "boolean"
        },
        "listFiles": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "mapRoot": {
          "description": "Specifies the location where debugger should locate map files instead of generated locations",
          "type": "string",
          "format": "uri"
        },
        "module": {
          "description": "Specify module code generation: 'CommonJS', 'Amd', 'System', or 'UMD'.",
          "enum": [ "commonjs", "amd", "umd", "system" ]
        },
        "noEmit": {
          "description": "Do not emit output.",
          "type": "boolean"
        },
        "noEmitOnError": {
          "description": "Do not emit outputs if any type checking errors were reported.",
          "type": "boolean"
        },
        "noImplicitAny": {
          "description": "Warn on expressions and declarations with an implied 'any' type.",
          "type": "boolean"
        },
        "noLib": {
          "type": "boolean"
        },
        "noLibCheck": {
          "type": "boolean"
        },
        "noResolve": {
          "type": "boolean"
        },
        "out": {
          "description": "Concatenate and emit output to single file.",
          "type": "string",
          "format": "uri"
        },
        "outDir": {
          "description": "Redirect output structure to the directory.",
          "type": "string",
          "format": "uri"
        },
        "preserveConstEnums": {
          "description": "Do not erase const enum declarations in generated code.",
          "type": "boolean"
        },
        "removeComments": {
          "description": "Do not emit comments to output.",
          "type": "boolean"
        },
        "sourceMap": {
          "description": "Generates corresponding '.map' file.",
          "type": "boolean"
        },
        "sourceRoot": {
          "description": "Specifies the location where debugger should locate TypeScript files instead of source locations.",
          "type": "string",
          "format": "uri"
        },
        "suppressImplicitAnyIndexErrors": {
          "description": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
          "type": "boolean"
        },
        "target": {
          "description": "Specify ECMAScript target version.",
          "enum": [ "es3", "es5", "es6" ],
          "default": "es3"
        },
        "watch": {
          "description": "Watch input files.",
          "type": "boolean"
        },
        "newLine": {
          "description": "Specifies the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix).",
          "enum": [ "CRLF", "LF" ]
        },
        "noEmitHelpers": {
          "type": "boolean"
        },
        "inlineSourceMap": {
          "type": "boolean"
        },
        "inlineSources": {
          "type": "boolean"
        },
        "emitDecoratorMetadata": {
          "type": "boolean"
        }
      }
    },
    "files": {
      "type": "array",
      "description": "If no 'files' property is present in a tsconfig.json, the compiler defaults to including all files the containing directory and subdirectories. When a 'files' property is specified, only those files are included.",
      "items": {
        "type": "string",
        "format": "uri"
      }
    }
  }
}
