{
  "title": "JSON schema for WebExtensions manifest files",
  "$schema": "http://json-schema.org/draft-04/schema#",

  "type": "object",
  "additionalProperties": true,
  "required": [ "manifest_version", "name", "version" ],

  "properties": {
    "author": {
      "description": "\"The extension's author, intended for display in the browser's user interface. If the developer key is supplied and it contains the \"name\" property, it will override the author key. There's no way to specify multiple authors.\"",
      "type": "string"
    },
    "background": {
      "type": "object",
      "description": "The background page is an HTML page that runs in the extension process. It exists for the lifetime of your extension, and only one instance of it at a time is active.",
      "properties": {
        "persistent": {
          "type": "boolean",
          "description": "When false, makes the background page an event page (loaded only when needed).",
          "default": true
        },
        "page": {
          "description": "Specify the HTML of the background page.",
          "type": "string"
        },
        "scripts": {
          "description": "A background page will be generated by the extension system that includes each of the files listed in the scripts property.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "browser_action": {
      "allOf": [ { "$ref": "#/definitions/action" } ],
      "description": "Use browser actions to put icons in the main Google Chrome toolbar, to the right of the address bar. In addition to its icon, a browser action can also have a tooltip, a badge, and a popup."
    },
    "chrome_settings_overrides": {
      "type": "object",
      "properties": {
        "homepage": {
          "type": "string"
        }
      }
    },
    "chrome_url_overrides": {
      "type": "object",
      "properties": {
        "bookmark": {
          "type": "string"
        },
        "history": {
          "type": "string"
        },
        "newtab": {
          "type": "string"
        }
      }
    },
    "commands": {
      "type": "object",
      "description": "Use the commands API to add keyboard shortcuts that trigger actions in your extension, for example, an action to open the browser action or send a command to the extension.",
      "patternProperties": {
        ".*": { "$ref": "#/definitions/command" },
        "^_execute_browser_action$": { "$ref": "#/definitions/command" },
        "^_execute_page_action$": { "$ref": "#/definitions/command" }
      }
    },
    "content_scripts": {
      "type": "array",
      "description": "Content scripts are JavaScript files that run in the context of web pages.",
      "minItems": 1,
      "uniqueItems": true,

      "items": {
        "type": "object",
        "required": [ "matches" ],
        "additionalProperties": false,
        "properties": {
          "matches": {
            "type": "array",
            "description": "Specifies which pages this content script will be injected into.",
            "minItems": 1,
            "uniqueItems": true,
            "items": { "$ref": "#/definitions/match_pattern" }
          },
          "exclude_matches": {
            "type": "array",
            "description": "Excludes pages that this content script would otherwise be injected into.",
            "uniqueItems": true,
            "items": { "$ref": "#/definitions/match_pattern" }
          },
          "css": {
            "type": "array",
            "description": "The list of CSS files to be injected into matching pages. These are injected in the order they appear in this array, before any DOM is constructed or displayed for the page.",
            "uniqueItems": true,
            "items": { "type": "string" }
          },
          "js": {
            "$ref": "#/definitions/scripts",
            "description": "The list of JavaScript files to be injected into matching pages. These are injected in the order they appear in this array."
          },
          "run_at": {
            "type": "string",
            "description": "Controls when the files in js are injected.",
            "enum": [ "document_start", "document_end", "document_idle" ],
            "default": "document_idle"
          },
          "all_frames": {
            "type": "boolean",
            "description": "Controls whether the content script runs in all frames of the matching page, or only the top frame.",
            "default": false
          },
          "include_globs": {
            "type": "array",
            "description": "Applied after matches to include only those URLs that also match this glob. Intended to emulate the @include Greasemonkey keyword.",
            "uniqueItems": true,
            "items": { "$ref": "#/definitions/glob_pattern" }
          },
          "exclude_globs": {
            "type": "array",
            "description": "Applied after matches to exclude URLs that match this glob. Intended to emulate the @exclude Greasemonkey keyword.",
            "uniqueItems": true,
            "items": { "$ref": "#/definitions/glob_pattern" }
          },
          "match_about_blank": {
            "type": "boolean",
            "description": "Whether to insert the content script on about:blank and about:srcdoc.",
            "default": false
          }
        }
      }
    },
    "content_security_policy": {
      "$ref": "#/definitions/content_security_policy"
    },
    "default_locale": {
      "type": "string",
      "description": "Specifies the subdirectory of _locales that contains the default strings for this extension.",
      "default": "en"
    },
    "description": {
      "type": "string",
      "description": "A plain text description of the extension"
    },
    "developer": {
      "type": "object",
      "description": "The name of the extension's developer and their homepage URL, intended for display in the browser's user interface.",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "devtools_page": {
      "type": "string",
      "description": "A DevTools extension adds functionality to the Chrome DevTools. It can add new UI panels and sidebars, interact with the inspected page, get information about network requests, and more."
    },
    "externally_connectable": {
      "type": "object",
      "description": "Declares which extensions, apps, and web pages can connect to your extension via runtime.connect and runtime.sendMessage.",
      "additionalProperties": false
    },
    "file_browser_handlers": {
      "type": "array",
      "description": "You can use this API to enable users to upload files to your website.",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [ "id", "default_title", "file_filters" ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Used by event handling code to differentiate between multiple file handlers"
          },
          "default_title": {
            "type": "string",
            "description": "What the button will display."
          },
          "file_filters": {
            "type": "array",
            "description": "Filetypes to match.",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "homepage_url": {
      "type": "string"
    },
    "icons": {
      "type": "object",
      "description": "One or more icons that represent the extension, app, or theme. Recommended format: PNG; also BMP, GIF, ICO, JPEG.",
      "minProperties": 1,
      "patternProperties": {
        "[0-9]+": {
          "type": "string"
        }
      }
    },
    "incognito": {
      "type": "string",
      "description": "Specify how this extension will behave if allowed to run in incognito mode.",
      "enum": [ "spanning", "split" ],
      "default": "spanning"
    },
    "manifest_version": {
      "type": "number",
      "description": "One integer specifying the version of the manifest file format your package requires.",
      "enum": [ 2 ],
      "minimum": 2,
      "maximum": 2
    },
    "name": {
      "type": "string",
      "description": "The name of the extension",
      "maxLength": 45
    },
    "omnibox": {
      "type": "object",
      "description": "The omnibox API allows you to register a keyword with Google Chrome's address bar, which is also known as the omnibox.",
      "required": [ "keyword" ],
      "additionalProperties": false,
      "properties": {
        "keyword": {
          "type": "string",
          "description": "The keyward that will trigger your extension."
        }
      }
    },
    "optional_permissions": {
      "$ref": "#/definitions/permissions",
      "description": "Use the chrome.permissions API to request declared optional permissions at run time rather than install time, so users understand why the permissions are needed and grant only those that are necessary."
    },
    "options_ui": {
      "type": "object",
      "description": "To allow users to customize the behavior of your extension, you may wish to provide an options page. If you do, an Options link will be shown on the extensions management page at chrome://extensions which opens a dialogue containing your options page.",
      "required": [ "page" ],
      "properties": {
        "page": {
          "type": "string",
          "description": "The path to your options page, relative to your extension's root."
        },
        "chrome_style": {
          "type": "boolean",
          "default": true,
          "description": "If true, a Chrome user agent stylesheet will be applied to your options page. The default value is false, but we recommend you enable it for a consistent UI with Chrome."
        },
        "open_in_tab": {
          "type": "boolean",
          "default": false,
          "description": "If true, your extension's options page will be opened in a new tab rather than embedded in chrome://extensions. The default is false, and we recommend that you don't change it. This is only useful to delay the inevitable deprecation of the old options UI! It will be removed soon, so try not to use it. It will break."
        }
      }
    },
    "page_action": {
      "allOf": [ { "$ref": "#/definitions/action" } ],
      "description": "Use the chrome.pageAction API to put icons inside the address bar. Page actions represent actions that can be taken on the current page, but that aren't applicable to all pages."
    },
    "permissions": {
      "$ref": "#/definitions/permissions",
      "description": "Permissions help to limit damage if your extension or app is compromised by malware. Some permissions are also displayed to users before installation, as detailed in Permission Warnings."
    },
    "short_name": {
      "type": "string",
      "description": "The short name is typically used where there is insufficient space to display the full name.",
      "maxLength": 12
    },
    "sidebar_action": {
      "type": "object",
      "description": "A sidebar is a pane that is displayed at the left-hand side of the browser window, next to the web page. The browser provides a UI that enables the user to see the currently available sidebars and to select a sidebar to display."
    },
    "version": {
      "description": "One to four dot-separated integers identifying the version of this extension.",
      "pattern": "^(?:\\d{1,5}\\.){0,3}\\d{1,5}$"
    },
    "web_accessible_resources": {
      "type": "array",
      "description": "An array of strings specifying the paths (relative to the package root) of packaged resources that are expected to be usable in the context of a web page.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    }
  },

  "definitions": {
    "action": {
      "type": "object",
      "properties": {
        "default_title": {
          "type": "string",
          "description": "Tooltip for the main toolbar icon."
        },
        "default_popup": {
          "type": "string",
          "description": "The popup appears when the user clicks the icon."
        },
        "default_icon": {
          "anyOf": [
            {
              "type": "string",
              "description": "FIXME: String form is deprecated."
            },
            {
              "type": "object",
              "description": "Icon for the main toolbar.",
              "patternProperties": {
                "[0-9]+": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "command": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "suggested_key": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^(default|mac|windows|linux|chromeos)$": {
              "type": "string",
              "pattern": "^(Ctrl|Command|MacCtrl|Alt|Option)\\+(Shift\\+)?[A-Z]"
            }
          }
        }
      }
    },

    "content_security_policy": {
      "type": "string",
      "description": "This introduces some fairly strict policies that will make extensions more secure by default, and provides you with the ability to create and enforce rules governing the types of content that can be loaded and executed by your extensions and applications.",
      "default": "script-src 'self'; object-src 'self'"
    },
    "glob_pattern": {
      "type": "string"
    },
    "match_pattern": {
      "type": "string",
      "pattern": "^((\\*|http|https|file|ftp|chrome-extension):\\/\\/(\\*|\\*\\.[^\\/\\*]+|[^\\/\\*]+)?(\\/.*))|<all_urls>$"
    },

    "permissions": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "anyOf": [
          { "type": "string" },
          {
            "enum": [
              "<all_urls>",
              "activeTab",
              "alarms",
              "bookmarks",
              "browsingData",
              "contextMenus",
              "contextualIdentities",
              "cookies",
              "downloads",
              "downloads.open",
              "geolocation",
              "history",
              "identity",
              "idle",
              "management",
              "nativeMessaging",
              "notifications",
              "proxy",
              "sessions",
              "storage",
              "tabs",
              "topSites",
              "webNavigation",
              "webRequest",
              "webRequestBlocking"
            ]
          }
        ]
      }
    },
    "scripts": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    }
  }
}
