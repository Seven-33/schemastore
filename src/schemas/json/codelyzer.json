{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "JSON Schema codelyzer",

  "type": "object",

  "properties": {
    "directive-selector-name": {
      "description": "Enforces naming conventions for directives",
      "type": "array",
      "items": {
        "enum": [ true, false, "camelCase", "kebab-case" ]
      }
    },
    "component-selector-name": {
      "description": "Enforces naming conventions for components",
      "type": "array",
      "items": {
        "enum": [ true, false, "camelCase", "kebab-case" ]
      }
    },
    "directive-selector-type": {
      "description": "Enforces the type of a directive",
      "type": "array",
      "items": {
        "enum": [ true, false, "attribute", "element" ]
      }
    },
    "component-selector-type": {
      "description": "Enforces the type of a component",
      "type": "array",
      "items": {
        "enum": [ true, false, "attribute", "element" ]
      }
    },
    "directive-selector-prefix": {
      "description": "Enforces all directives to have a uniform prefix",
      "type": "array",
      "items": {
        "enum": [ true, false, "sg" ]
      }
    },
    "component-selector-prefix": {
      "description": "Enforces all components to have a uniform prefix",
      "type": "array",
      "items": {
        "enum": [ true, false, "sg" ]
      }
    },
    "use-input-property-decorator": {
      "description": "Enforces the use of the @Input property decorator instead of the inputs property",
      "type": "boolean"
    },
    "use-output-property-decorator": {
      "description": "Enforces the use of the @Output property decorator instead of the outputs property",
      "type": "boolean"
    },
    "use-host-property-decorator": {
      "description": "Enforces the use of @HostBindings and @HostListeners instead of the host property",
      "type": "boolean"
    },
    "no-attribute-parameter-decorator": {
      "description": "Disallows the @Attribute decorator in constructors",
      "type": "boolean"
    },
    "no-input-rename": {
      "description": "Disallows the renaming of input properties",
      "type": "boolean"
    },
    "no-output-rename": {
      "description": "Disallows the renaming of output properties",
      "type": "boolean"
    },
    "no-forward-ref": {
      "description": "Enforces avoidence of utilizing forwardRef's in classes and variables",
      "type": "boolean"
    },
    "use-life-cycle-interface": {
      "description": "Enforces all life cycle code using the lifecycle hook interfaces",
      "type": "boolean"
    },
    "use-pipe-transform-interface": {
      "description": "Enforces all pipes using the PipeTransform interface",
      "type": "boolean"
    },
    "pipe-naming": {
      "description": "Enforces naming conventions for Pipes",
      "type": "array",
      "items": {
        "enum": [ true, "camelCase", "sg" ]
      }
    },
    "component-class-suffix": {
      "description": "Enforces all components having the suffix of 'Component'",
      "type": "boolean"
    },
    "directive-class-suffix": {
      "description": "Enforces all components having the suffix of 'Directive'",
      "type": "boolean"
    }
  }
}
